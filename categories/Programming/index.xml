<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on F. Cheng&#39;s Talk</title>
    <link>http://marscfeng.github.io/categories/Programming/</link>
    <description>Recent content in Programming on F. Cheng&#39;s Talk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2020 F. Cheng</copyright>
    <lastBuildDate>Sat, 24 Feb 2018 22:42:07 +0000</lastBuildDate>
    
	<atom:link href="http://marscfeng.github.io/categories/Programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>how to run MPI programs?</title>
      <link>http://marscfeng.github.io/post/how-to-run-MPI-programs/</link>
      <pubDate>Sat, 24 Feb 2018 22:42:07 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/how-to-run-MPI-programs/</guid>
      <description>最近在编译一个老的有限差分的波场模拟程序，基于fortran的mpi程序。说来奇怪，mpi程序并不是每次都能编译成功，多数时候只能用串行方式</description>
    </item>
    
    <item>
      <title>use openmp for your simplified parallelism</title>
      <link>http://marscfeng.github.io/post/use-openmp-for-your-simplified-parallelism/</link>
      <pubDate>Thu, 17 Nov 2016 00:55:10 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/use-openmp-for-your-simplified-parallelism/</guid>
      <description>这里主要是废话，权且当作是对上一篇博文的补充。 多数情况下，MPI并不是最好的选择，这两天的测试让我深有体会。要实现MPI，要不就选择用Clu</description>
    </item>
    
    <item>
      <title>export high quality figure from matlab</title>
      <link>http://marscfeng.github.io/post/export-high-quality-figure-from-matlab/</link>
      <pubDate>Fri, 14 Oct 2016 01:15:25 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/export-high-quality-figure-from-matlab/</guid>
      <description>对于习惯Matlab的科研工作者而言，用它来绘制高质量、可发表的图片还是非常必要的。不过喜欢python的还是坚持去发掘python吧，尤其</description>
    </item>
    
    <item>
      <title>marscfeng&#39;s gnufor2 module</title>
      <link>http://marscfeng.github.io/post/marscfeng-s-gnufor2-module/</link>
      <pubDate>Fri, 30 Sep 2016 15:30:35 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/marscfeng-s-gnufor2-module/</guid>
      <description>gnufor2 是一个比较有意思的F90模块，支持命令行模式下接入gnuplot进行绘图。gnufor2本身其实并不牛逼，只不过是写好一个gnuplot可</description>
    </item>
    
    <item>
      <title>my personal makefile module</title>
      <link>http://marscfeng.github.io/post/my-personal-makefile-module/</link>
      <pubDate>Thu, 29 Sep 2016 12:25:19 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/my-personal-makefile-module/</guid>
      <description>module text #--------------------------------------------------------------- # # &amp;lt;&amp;lt; marscfeng&#39;s Makefile template for gcc/gfortran &amp;gt;&amp;gt; # #--------------------------------------------------------------- # Location Flags for default path of libraries, binaries and modules #--------------------------------------------------------------- LIB = /Users/Mars/.Setup/LIBs/ MOD = /Users/Mars/.Setup/MODs/ PROG = /Users/Mars/.Setup/ #-------------------------------------------------------------------- # Compile&amp;amp;Link Flags #-------------------------------------------------------------------- FFLAGS = -O -g -fopenmp FFLAGS += -Wall LDFLAGS = -lm -lsacio -lmtspec -lgnufor2 -lpgbar LDLIBS = -L$(LIB) CC = gcc FC = gfortran #-------------------------------------------------------------------- # Programs Flags #-------------------------------------------------------------------- EXE</description>
    </item>
    
    <item>
      <title>linux下静动态库的添加</title>
      <link>http://marscfeng.github.io/post/linux%E4%B8%8B%E9%9D%99%E5%8A%A8%E6%80%81%E5%BA%93%E7%9A%84%E6%B7%BB%E5%8A%A0/</link>
      <pubDate>Thu, 29 Sep 2016 09:46:04 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/linux%E4%B8%8B%E9%9D%99%E5%8A%A8%E6%80%81%E5%BA%93%E7%9A%84%E6%B7%BB%E5%8A%A0/</guid>
      <description>静态库 为了在编译程序中正确找到库文件,静态库必须按照 lib[name].a 的规则命名,如下例中[name]=pr. 在linux环境中, 使用ar命令创建静态库文件</description>
    </item>
    
    <item>
      <title>fortran 子程序及其封装</title>
      <link>http://marscfeng.github.io/post/fortran%E5%AD%90%E7%A8%8B%E5%BA%8F%E5%8F%8A%E5%85%B6%E5%B0%81%E8%A3%85/</link>
      <pubDate>Wed, 28 Sep 2016 12:20:31 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/fortran%E5%AD%90%E7%A8%8B%E5%BA%8F%E5%8F%8A%E5%85%B6%E5%B0%81%E8%A3%85/</guid>
      <description>对于Fortran90/95而言，fortran子程序包括：function，external function and subroutine. function，就是严格意义上的for</description>
    </item>
    
    <item>
      <title>GCC编译过程及链接库</title>
      <link>http://marscfeng.github.io/post/GCC%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E5%8F%8A%E9%93%BE%E6%8E%A5%E5%BA%93/</link>
      <pubDate>Wed, 21 Oct 2015 14:40:18 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/GCC%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E5%8F%8A%E9%93%BE%E6%8E%A5%E5%BA%93/</guid>
      <description>编译过程 GCC的编译过程是分为四个阶段进行的，即预处理(也称预编译，Preprocessing)、编译(Compilation)、汇编 (As</description>
    </item>
    
    <item>
      <title>makefile 总结</title>
      <link>http://marscfeng.github.io/post/makefile-%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 21 Oct 2015 14:28:15 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/makefile-%E6%80%BB%E7%BB%93/</guid>
      <description>常用变量 CFLAGS C编译器的选项，没有定义，可以指定编译头文件路径 LDFLAGS 链接器的选项，没有定义，可以指定链接库文件 LDLIBS 链接器的选项，没有定义，可以指定链接</description>
    </item>
    
    <item>
      <title>malloc.h not found on Mac OS X 解决办法</title>
      <link>http://marscfeng.github.io/post/malloc-h-not-found-on-Mac-OS-X-%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 21 Oct 2015 13:26:36 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/malloc-h-not-found-on-Mac-OS-X-%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>修改编译参数 OSX 10.5+以——10.11，MAC把malloc.h放在 /usr/include/malloc中 编译的时候 makefile中添</description>
    </item>
    
    <item>
      <title>IEEE754学习总结</title>
      <link>http://marscfeng.github.io/post/IEEE754%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 21 Oct 2015 08:08:06 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/IEEE754%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</guid>
      <description>参考&amp;gt;顺水行舟 前言 前不久在分析一个程序的过程中遇到了浮点运算，也就顺便学习了一下浮点数的存放格式（IEEE754标准），此文仅作为总结</description>
    </item>
    
    <item>
      <title>十进制小数转二进制</title>
      <link>http://marscfeng.github.io/post/%E5%8D%81%E8%BF%9B%E5%88%B6%E5%B0%8F%E6%95%B0%E8%BD%AC%E4%BA%8C%E8%BF%9B%E5%88%B6/</link>
      <pubDate>Tue, 20 Oct 2015 22:07:29 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/%E5%8D%81%E8%BF%9B%E5%88%B6%E5%B0%8F%E6%95%B0%E8%BD%AC%E4%BA%8C%E8%BF%9B%E5%88%B6/</guid>
      <description>参考&amp;gt;upzone 十进制小数→二进制小数 方法：“乘2取整” 对十进制小数乘2得到的整数部分和小数部分,整数部分既是相应的二进制数码,再用</description>
    </item>
    
    <item>
      <title>将负数转换为二进制</title>
      <link>http://marscfeng.github.io/post/%E5%B0%86%E8%B4%9F%E6%95%B0%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E8%BF%9B%E5%88%B6/</link>
      <pubDate>Tue, 20 Oct 2015 16:56:20 +0000</pubDate>
      
      <guid>http://marscfeng.github.io/post/%E5%B0%86%E8%B4%9F%E6%95%B0%E8%BD%AC%E6%8D%A2%E4%B8%BA%E4%BA%8C%E8%BF%9B%E5%88%B6/</guid>
      <description>参考&amp;gt;onewalkingman 5在计算机中如何表示 比如，假设有一 int 类型的数，值为5，那么，我们知道它在计算机中表示为： 00000000 00000000 00000000 00000101 5转换</description>
    </item>
    
  </channel>
</rss>